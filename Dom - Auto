package Dominio;

import java.util.*;

public class Auto {

    private char fila;
    private int columna;
    private int direccion; // 0-Arriba / 1-Derecha / 2-Abajo / 3-Izquierda
    private String color;
    private static List<Auto> listaDeAutos = new ArrayList<>();

    public static List<Auto> getListaDeAutos() {
        return listaDeAutos;
    }

    //Constructor
    public Auto(char fila, int columna, int direccion) {
        this.fila = fila;
        this.columna = columna;
        this.direccion = direccion;
        this.color = colorAleatorio();
    }

    public char getFila() {
        return fila;
    }

    public void setFila(char fila) {
        this.fila = fila;
    }

    public int getColumna() {
        return columna;
    }

    public void setColumna(int columna) {
        this.columna = columna;
    }

    public int getDireccion() {
        return direccion;
    }

    public void setDireccion(int direccion) {
        this.direccion = direccion;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    private String colorAleatorio() {
        String[] colores = {"Celeste", "Verde", "Azul", "Amarillo", "Negro", "Magenta"};
        int indice = (int) (Math.random() * colores.length);
        return colores[indice];
    }
    
    
    private String getCodigoColorAuto() {
    if (color.equals("Celeste")) {
        return "\033[36m"; // Color Rojo
    } else if (color.equals("Verde")) {
        return "\033[32m"; // Color Verde
    } else if (color.equals("Azul")) {
        return "\033[34m"; // Color Azul
    } else if (color.equals("Amarillo")) {
        return "\033[33m"; // Color Amarillo
    } else if (color.equals("Negro")) {
        return "\033[30m"; // Color Negro
    } else if (color.equals("Magenta")) {
        return "\033[35m"; // Color Magenta
    } else {
        return "\033[0m"; // Reset - para cualquier otro caso no definido
    }
}

    

    public static Boolean registrarAuto(char fila, int columna, int direccion) {
        listaDeAutos.add (new Auto (fila, columna, direccion));
        return true;   
    }
    
public static void mostrarAutos() {
        if (listaDeAutos.isEmpty()) {
            System.out.println("No hay autos registrados.");
            return;
        }

        System.out.println("Lista de Autos:");
        for (Auto auto : listaDeAutos) {
            System.out.println(auto); //este auto printea el @Override
        }
    }

@Override
public String toString() {
 return "Auto en fila: " + getFila() + 
         ", columna: " + getColumna() + 
         ", direccion: " + getDireccionString() + 
         ", color: " + getColor();
}

// Método para obtener la dirección como string
    private String getDireccionString() {
        switch (direccion) {
            case 0: return "Arriba";
            case 1: return "Derecha";
            case 2: return "Abajo";
            case 3: return "Izquierda";
            default: return "Desconocida";
        }
    }
    
    public List<String> printAuto() {
        List<String> dibujo = new ArrayList<>();
        
        // "Rojo", "Verde", "Azul", "Amarillo", "Negro", "Magenta"
        
        String b = "\u001B[0m";
        String fAmarillo =  "\033[43m";
        String Rojo = "\033[31m";
        
        String codigoColorAuto = getCodigoColorAuto();
        
        

        if (this.direccion == 0) {
            dibujo.add(fAmarillo + Rojo + " OO " + b);
            dibujo.add( codigoColorAuto + " ** "+ b);
            dibujo.add( codigoColorAuto + " ** "+ b);
            dibujo.add( codigoColorAuto + " ** "+ b);
        }

        if (this.direccion == 1) {
            dibujo.add("    ");
            dibujo.add(codigoColorAuto + "***" + b + fAmarillo + Rojo + "O"+ b);
            dibujo.add(codigoColorAuto + "***" + b + fAmarillo + Rojo + "O"+ b);            
            dibujo.add("    ");

        }
        if (this.direccion == 2) {
            dibujo.add(codigoColorAuto + " ** "+ b);
            dibujo.add(codigoColorAuto + " ** "+ b);
            dibujo.add(codigoColorAuto + " ** "+ b);
            dibujo.add(fAmarillo + Rojo + " OO " + b);
        }

        if (this.direccion == 3) {
            dibujo.add("    ");
            dibujo.add(fAmarillo + Rojo + "O" + b + codigoColorAuto + "***"+ b);
            dibujo.add(fAmarillo + Rojo + "O" + b + codigoColorAuto + "***"+ b);
            dibujo.add("    ");

        }

        return dibujo;
    }

}
