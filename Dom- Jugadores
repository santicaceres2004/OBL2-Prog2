package Dominio;

import java.util.ArrayList;
import java.util.List;

public class Jugadores {

    private String nombre;
    private int edad;
    private String alias;
    private static List<Jugadores> listaJugadores = new ArrayList<>();
    private static List<String> jugadoresAjugar = new ArrayList<>();
    
    
    public Jugadores(String nombre, int edad, String alias) {
        this.nombre = nombre;
        this.edad = edad;
        this.alias = alias;
    }
    

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String unNombre) {
        this.nombre = unNombre;
    }

    public int getEdad() {
        return this.edad;
    }

    public void setEdad(int unaEdad) {
        this.edad = unaEdad;
    }

    public String getAlias() {
        return this.alias;
    }

    public void setAlias(String unAlias) {
        this.alias = unAlias;
    }
    
    public static List<Jugadores> getListaJugadores(){
        return listaJugadores;
    }
    
    public static void mostrarJugadores() {
        if (listaJugadores.isEmpty()) {
        System.out.println("No hay jugadores registrados.");
        return;
        }
        for(Jugadores jugadores : listaJugadores) {
        System.out.println(jugadores.getAlias());
        }
    }
    
//    @Override
//    public String toString() {
//        return "Alias: " + getAlias();
//    }

public static void seleccionarJugador(String alias) {
    for (Jugadores jugador : listaJugadores) {
        if (jugador.getAlias().equals(alias)) {
            System.out.println("Jugador seleccionado: " + alias);
            // jugadoresAjugar.add(alias);
            return; // Sale del método una vez encontrado el jugador
        }
    }
    System.out.println("Jugador no encontrado.");
}

    public static List<String> getJugadoresAjugar() {
        return jugadoresAjugar;
    }

    public static boolean registrarJugador(String nombre, int edad, String alias) {
        for (int i = 0; i < listaJugadores.size(); i++) {
            Jugadores j = listaJugadores.get(i);
            if (j.getAlias().equalsIgnoreCase(alias)) {
                return false;

            }
        }
        listaJugadores.add(new Jugadores(nombre, edad, alias));
        return true;
    }

}

//Encapsulamiento y Manejo de Estado:
//Deberías considerar métodos para limpiar o reiniciar las listas de jugadores,
//especialmente si se desea empezar un nuevo juego o se manejan múltiples rondas
//dentro de una sesión de juego.
